{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Upgrad Work\\\\BookMovieApp\\\\bookmovieapp\\\\src\\\\screens\\\\home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './Home.css';\nimport Header from \"../../common/header/Header\";\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { CallMissedSharp } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home(props) {\n  _s();\n\n  const [upComingMovie, setUpComingMovie] = [];\n  /*const upComingMoviesList = [\r\n    {\r\n      \"poster_url\":\"../../assets/UpcommingMovies/OnePieceRed.jpg\",\r\n      \"upComingMovieName\":\"One Piece: Film Red\"\r\n    },\r\n    {\r\n      \"poster_url\":\"../../assets/UpcommingMovies/wakandaforever2.jpg\",\r\n      \"upComingMovieName\":\"Wakanda Forever\"\r\n    },\r\n    {\r\n      \"poster_url\":\"../../assets/UpcommingMovies/missionImpossible.jpg\",\r\n      \"upComingMovieName\":\"Mission:Impossible Dead Reckoning\"\r\n    },\r\n    {\r\n      \"poster_url\":\"../../assets/UpcommingMovies/avatar2.jpg\",\r\n      \"upComingMovieName\":\"Avatar 2\"\r\n    },\r\n    {\r\n      \"poster_url\":\"\",\r\n      \"upComingMovieName\":\"place_holder\"\r\n    },\r\n    {\r\n      \"poster_url\":\"\",\r\n      \"upComingMovieName\":\"place_holder\"\r\n    }\r\n  ];*/\n\n  useEffect(() => {\n    let dataShows = null;\n    fetch(props.baseUrl + \"movies/?limit=17\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Cache-Control\": \"no-cache\"\n      }\n    }).then(response => response.json()).then(response => {\n      //console.log(response.movies);\n      let upComingArr = [];\n      let count = 0;\n\n      for (let data of response.movies) {\n        upComingArr.push({\n          id: count,\n          title: data.title,\n          poster_url: data.poster_url\n        });\n        count = count + 1;\n      }\n\n      console.log(upComingArr);\n      setUpComingMovie(upComingArr);\n      /*setOriginalShows(response.shows);\r\n        let newLocations = [];\r\n        for (let show of response.shows) {\r\n        newLocations.push({\r\n          id: show.theatre.city,\r\n          location: show.theatre.city,\r\n        });\r\n      }\r\n        newLocations = newLocations.filter(\r\n        (loc, index, self) => index === self.findIndex((c) => c.id === loc.id)\r\n      );\r\n      setLocations(newLocations);*/\n    });\n  }, []);\n\n  const mainBody = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"upComingMovies\",\n      children: \"Upcoming Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(GridList, {\n        cellHeight: 200,\n        cols: 6,\n        style: {\n          width: 800,\n          height: 600\n        },\n        children: upComingMovie.map(data => /*#__PURE__*/_jsxDEV(GridListTile, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: data.poster_url,\n            alt: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n\n  return mainBody;\n}\n/*\r\n  <GridList cellHeight={200} cols={6} style={{ width: 800, height: 600 }}>\r\n                {upComingMoviesList.map((data) => (\r\n                  <GridListTile key={data.id}>\r\n                    <img src={data.poster_url} alt={data.upComingMovieName} />\r\n                  </GridListTile>\r\n                ))}\r\n              </GridList>\r\n*/\n\n\n_s(Home, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Link","Header","GridList","GridListTile","GridListTileBar","CallMissedSharp","Home","props","upComingMovie","setUpComingMovie","dataShows","fetch","baseUrl","method","headers","then","response","json","upComingArr","count","data","movies","push","id","title","poster_url","console","log","mainBody","width","height","map"],"sources":["D:/projects/Upgrad Work/BookMovieApp/bookmovieapp/src/screens/home/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Home.css';\r\nimport Header from \"../../common/header/Header\";\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport { CallMissedSharp } from '@material-ui/icons';\r\n\r\nfunction Home(props){\r\n\r\n  const [upComingMovie, setUpComingMovie] = ([]);\r\n\r\n  /*const upComingMoviesList = [\r\n    {\r\n      \"poster_url\":\"../../assets/UpcommingMovies/OnePieceRed.jpg\",\r\n      \"upComingMovieName\":\"One Piece: Film Red\"\r\n    },\r\n    {\r\n      \"poster_url\":\"../../assets/UpcommingMovies/wakandaforever2.jpg\",\r\n      \"upComingMovieName\":\"Wakanda Forever\"\r\n    },\r\n    {\r\n      \"poster_url\":\"../../assets/UpcommingMovies/missionImpossible.jpg\",\r\n      \"upComingMovieName\":\"Mission:Impossible Dead Reckoning\"\r\n    },\r\n    {\r\n      \"poster_url\":\"../../assets/UpcommingMovies/avatar2.jpg\",\r\n      \"upComingMovieName\":\"Avatar 2\"\r\n    },\r\n    {\r\n      \"poster_url\":\"\",\r\n      \"upComingMovieName\":\"place_holder\"\r\n    },\r\n    {\r\n      \"poster_url\":\"\",\r\n      \"upComingMovieName\":\"place_holder\"\r\n    }\r\n  ];*/\r\n\r\n  useEffect(() => {\r\n    let dataShows = null;\r\n\r\n    fetch(props.baseUrl + \"movies/?limit=17\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Cache-Control\": \"no-cache\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        //console.log(response.movies);\r\n        let upComingArr = [];\r\n        let count = 0;\r\n        for(let data of response.movies) {\r\n          upComingArr.push({\r\n            id: count,\r\n            title: data.title,\r\n            poster_url: data.poster_url\r\n          });\r\n          count = count + 1;\r\n        }\r\n        console.log(upComingArr);\r\n        setUpComingMovie(upComingArr);\r\n        /*setOriginalShows(response.shows);\r\n\r\n        let newLocations = [];\r\n\r\n        for (let show of response.shows) {\r\n          newLocations.push({\r\n            id: show.theatre.city,\r\n            location: show.theatre.city,\r\n          });\r\n        }\r\n\r\n        newLocations = newLocations.filter(\r\n          (loc, index, self) => index === self.findIndex((c) => c.id === loc.id)\r\n        );\r\n        setLocations(newLocations);*/\r\n      });\r\n  }, []);\r\n\r\n  const mainBody = (\r\n        <div>\r\n            <Header />\r\n            \r\n            <div class=\"upComingMovies\">\r\n                Upcoming Movies\r\n            </div>\r\n            <div>\r\n              <GridList cellHeight={200} cols={6} style={{ width: 800, height: 600 }}>\r\n                {upComingMovie.map((data) => (\r\n                  <GridListTile>\r\n                    <img src={data.poster_url} alt={data.title} />\r\n                  </GridListTile>\r\n                ))}\r\n              </GridList>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n  return mainBody;\r\n}\r\n\r\n/*\r\n  <GridList cellHeight={200} cols={6} style={{ width: 800, height: 600 }}>\r\n                {upComingMoviesList.map((data) => (\r\n                  <GridListTile key={data.id}>\r\n                    <img src={data.poster_url} alt={data.upComingMovieName} />\r\n                  </GridListTile>\r\n                ))}\r\n              </GridList>\r\n*/\r\n\r\nexport default Home;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SAASC,eAAT,QAAgC,oBAAhC;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;EAAA;;EAElB,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAqC,EAA3C;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEEX,SAAS,CAAC,MAAM;IACd,IAAIY,SAAS,GAAG,IAAhB;IAEAC,KAAK,CAACJ,KAAK,CAACK,OAAN,GAAgB,kBAAjB,EAAqC;MACxCC,MAAM,EAAE,KADgC;MAExCC,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,iBAAiB;MAFV;IAF+B,CAArC,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQGF,IARH,CAQSC,QAAD,IAAc;MAClB;MACA,IAAIE,WAAW,GAAG,EAAlB;MACA,IAAIC,KAAK,GAAG,CAAZ;;MACA,KAAI,IAAIC,IAAR,IAAgBJ,QAAQ,CAACK,MAAzB,EAAiC;QAC/BH,WAAW,CAACI,IAAZ,CAAiB;UACfC,EAAE,EAAEJ,KADW;UAEfK,KAAK,EAAEJ,IAAI,CAACI,KAFG;UAGfC,UAAU,EAAEL,IAAI,CAACK;QAHF,CAAjB;QAKAN,KAAK,GAAGA,KAAK,GAAG,CAAhB;MACD;;MACDO,OAAO,CAACC,GAAR,CAAYT,WAAZ;MACAT,gBAAgB,CAACS,WAAD,CAAhB;MACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAIO,CArCH;EAsCD,CAzCQ,EAyCN,EAzCM,CAAT;;EA2CA,MAAMU,QAAQ,gBACR;IAAA,wBACI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAGI;MAAK,KAAK,EAAC,gBAAX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,eAMI;MAAA,uBACE,QAAC,QAAD;QAAU,UAAU,EAAE,GAAtB;QAA2B,IAAI,EAAE,CAAjC;QAAoC,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAT;UAAcC,MAAM,EAAE;QAAtB,CAA3C;QAAA,UACGtB,aAAa,CAACuB,GAAd,CAAmBX,IAAD,iBACjB,QAAC,YAAD;UAAA,uBACE;YAAK,GAAG,EAAEA,IAAI,CAACK,UAAf;YAA2B,GAAG,EAAEL,IAAI,CAACI;UAArC;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADN;;EAmBA,OAAOI,QAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAxGStB,I;;KAAAA,I;AA0GT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}