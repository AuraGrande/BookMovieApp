{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Upgrad Work\\\\BookMovieApp\\\\bookmovieapp\\\\src\\\\screens\\\\home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './Home.css';\nimport Header from \"../../common/header/Header\";\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Link, NavLink, Switch } from 'react-router-dom';\nimport { GridList, GridListTile, GridListTileBar, Box, Card, CardContent, Typography, CardActions, Button, FormControl, TextField, MenuItem, ListItemIcon, ListItemText, Checkbox } from \"@material-ui/core\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    height: '27%',\n    width: '85%'\n  },\n  titleColor: {\n    color: theme.palette.primary.light\n  },\n  compAttribs: {\n    width: \"95%\",\n    padding: theme.spacing.unit\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  },\n  getContentAnchorEl: null,\n  anchorOrigin: {\n    vertical: \"bottom\",\n    horizontal: \"center\"\n  },\n  transformOrigin: {\n    vertical: \"top\",\n    horizontal: \"center\"\n  },\n  variant: \"menu\"\n};\n\nfunction Home(props) {\n  _s();\n\n  const [upComingMovie, setUpComingMovie] = useState([]);\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [genreOptions, setGenreOptions] = useState([]);\n  const [artistName, setArtistName] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    let dataShows = null;\n    fetch(props.baseUrl + \"movies/?limit=17\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Cache-Control\": \"no-cache\"\n      }\n    }).then(response => response.json()).then(response => {\n      //console.log(response.movies);\n      let upComingArr = [];\n      let movieDeetsArr = [];\n      let count = 0;\n\n      for (let data of response.movies) {\n        upComingArr.push({\n          id: count,\n          title: data.title,\n          poster_url: data.poster_url\n        });\n        movieDeetsArr.push({\n          id: count,\n          title: data.title,\n          poster_url: data.poster_url\n        });\n        count = count + 1;\n      }\n\n      console.log(upComingArr);\n      setUpComingMovie(upComingArr);\n      setMovieDetails(movieDeetsArr);\n    });\n    fetch(props.baseUrl + \"genres\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Cache-Control\": \"no-cache\"\n      }\n    }).then(response => response.json()).then(response => {\n      let genreOptions = [];\n\n      for (let data of response.genres) {\n        genreOptions.push(data.genre);\n      }\n\n      console.log(genreOptions);\n      setGenreOptions(genreOptions);\n    });\n    fetch(props.baseUrl + \"artists\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Cache-Control\": \"no-cache\"\n      }\n    }).then(response => response.json()).then(response => {\n      let artistNamer = [];\n\n      for (let data of response.artists) {\n        if (data.role_type === \"ACTOR\") {\n          artistNamer.push(data.first_name + \" \" + data.last_name);\n        }\n      }\n\n      console.log(artistNamer);\n      setArtistName(artistNamer);\n    });\n  }, []);\n\n  const handleChange = event => {\n    const value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setSelected(selected.length === genreOptions.length ? [] : genreOptions);\n      return;\n    }\n\n    setSelected(value);\n  };\n\n  const handleRoute = () => {\n    console.log(\"FUCK!\");\n  };\n\n  const mainBody = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upComingMovies\",\n      children: \"Upcoming Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(GridList, {\n        cellHeight: 250,\n        cols: 6,\n        style: {\n          flexWrap: 'nowrap',\n          transform: 'translateZ(0)'\n        },\n        children: upComingMovie.map(data => /*#__PURE__*/_jsxDEV(GridListTile, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: data.poster_url,\n            alt: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n            title: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainbody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieTab\",\n        children: /*#__PURE__*/_jsxDEV(GridList, {\n          cellHeight: 350,\n          cols: 4,\n          onTileClick: handleRoute(),\n          children: movieDetails.map(data => /*#__PURE__*/_jsxDEV(GridListTile, {\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: data.poster_url,\n              alt: data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n              title: data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 23\n            }, this)]\n          }, data.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filterTab\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.titleColor,\n                variant: \"string\",\n                children: \"FIND MOVIES BY:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                className: classes.compAttribs,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"Movie Name\",\n                  variant: \"standard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                className: classes.compAttribs,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"mutiple-select-label-genre\",\n                  select: true,\n                  label: \"Genre\",\n                  variant: \"standard\",\n                  value: selected,\n                  onChange: handleChange,\n                  renderValue: selected => selected.join(\", \"),\n                  MenuProps: MenuProps,\n                  children: genreOptions.map(genreOptions => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: genreOptions,\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        checked: selected.indexOf(genreOptions) > -1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: genreOptions\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 31\n                    }, this)]\n                  }, genreOptions, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                className: classes.compAttribs,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"multiple-select-label-artists\",\n                  select: true,\n                  label: \"Artists\",\n                  variant: \"standard\",\n                  value: selected,\n                  onChange: handleChange,\n                  renderValue: selected => selected.join(\",\"),\n                  MenuProps: MenuProps,\n                  children: artistName.map(artistName => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: artistName,\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        checked: selected.indexOf(artistName) > -1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: artistName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 31\n                    }, this)]\n                  }, artistName, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                className: classes.compAttribs,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"someDate\",\n                  label: \"Release Date Start\",\n                  width: \"95%\",\n                  InputLabelProps: {\n                    shrink: true,\n                    required: true\n                  },\n                  type: \"date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                className: classes.compAttribs,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"someDate\",\n                  label: \"Release Date End\",\n                  InputLabelProps: {\n                    shrink: true,\n                    required: true\n                  },\n                  type: \"date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.compAttribs,\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Apply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n\n  return mainBody;\n}\n\n_s(Home, \"vR8BmR7vJkcCFm0Metz3d1VY1gQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Header","ReactDOM","BrowserRouter","Router","Route","Link","NavLink","Switch","GridList","GridListTile","GridListTileBar","Box","Card","CardContent","Typography","CardActions","Button","FormControl","TextField","MenuItem","ListItemIcon","ListItemText","Checkbox","Theme","createStyles","makeStyles","useStyles","theme","root","display","flexWrap","height","width","titleColor","color","palette","primary","light","compAttribs","padding","spacing","unit","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","variant","Home","props","upComingMovie","setUpComingMovie","movieDetails","setMovieDetails","selected","setSelected","genreOptions","setGenreOptions","artistName","setArtistName","classes","dataShows","fetch","baseUrl","method","headers","then","response","json","upComingArr","movieDeetsArr","count","data","movies","push","id","title","poster_url","console","log","genres","genre","artistNamer","artists","role_type","first_name","last_name","handleChange","event","value","target","length","handleRoute","mainBody","transform","map","cursor","join","indexOf","shrink","required"],"sources":["D:/projects/Upgrad Work/BookMovieApp/bookmovieapp/src/screens/home/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './Home.css';\r\nimport Header from \"../../common/header/Header\";\r\nimport ReactDOM from 'react-dom';  \r\nimport { \r\n    BrowserRouter as Router, \r\n    Route, \r\n    Link, \r\n    NavLink, \r\n    Switch \r\n} from 'react-router-dom';\r\n\r\nimport {\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n  FormControl,\r\n  TextField,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\n\r\nimport { \r\n  Theme, \r\n  createStyles, \r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      height: '27%',\r\n      width: '85%',\r\n    },\r\n    titleColor: {\r\n      color: theme.palette.primary.light\r\n    },\r\n    compAttribs: {\r\n      width: \"95%\",\r\n      padding: theme.spacing.unit\r\n    }\r\n  })\r\n);\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  },\r\n  getContentAnchorEl: null,\r\n  anchorOrigin: {\r\n    vertical: \"bottom\",\r\n    horizontal: \"center\"\r\n  },\r\n  transformOrigin: {\r\n    vertical: \"top\",\r\n    horizontal: \"center\"\r\n  },\r\n  variant: \"menu\"\r\n};\r\n\r\nfunction Home(props){\r\n\r\n  const [upComingMovie, setUpComingMovie] = useState([]);\r\n  const [movieDetails, setMovieDetails] = useState([]);\r\n  const [selected, setSelected] = useState([]);\r\n  const [genreOptions, setGenreOptions] = useState([]);\r\n  const [artistName, setArtistName] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let dataShows = null;\r\n\r\n    fetch(props.baseUrl + \"movies/?limit=17\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Cache-Control\": \"no-cache\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        //console.log(response.movies);\r\n        let upComingArr = [];\r\n        let movieDeetsArr = [];\r\n        let count = 0;\r\n        for(let data of response.movies) {\r\n          upComingArr.push({\r\n            id: count,\r\n            title: data.title,\r\n            poster_url: data.poster_url\r\n          });\r\n          movieDeetsArr.push({\r\n            id: count,\r\n            title: data.title,\r\n            poster_url: data.poster_url\r\n          });\r\n          count = count + 1;\r\n        }\r\n\r\n        console.log(upComingArr);\r\n        setUpComingMovie(upComingArr);\r\n        setMovieDetails(movieDeetsArr);\r\n      });\r\n      fetch(props.baseUrl + \"genres\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Cache-Control\": \"no-cache\",\r\n        }\r\n      })\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          let genreOptions = [];\r\n          for(let data of response.genres){\r\n            genreOptions.push(data.genre);\r\n          }\r\n          console.log(genreOptions);\r\n          setGenreOptions(genreOptions);\r\n        })\r\n      fetch(props.baseUrl + \"artists\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Cache-Control\": \"no-cache\",\r\n        }\r\n      })\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          let artistNamer = [];\r\n          for(let data of response.artists){\r\n            if(data.role_type === \"ACTOR\"){\r\n              artistNamer.push(data.first_name + \" \" + data.last_name);\r\n            }\r\n          }\r\n          console.log(artistNamer);\r\n          setArtistName(artistNamer);\r\n        })\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    const value = event.target.value;\r\n    if (value[value.length - 1] === \"all\") {\r\n      setSelected(selected.length === genreOptions.length ? [] : genreOptions);\r\n      return;\r\n    }\r\n    setSelected(value);\r\n  };\r\n\r\n  const handleRoute = () => {\r\n    console.log(\"FUCK!\");\r\n  };\r\n\r\n  const mainBody = (\r\n        <div>\r\n            <Header />\r\n            \r\n            <div className=\"upComingMovies\">\r\n                Upcoming Movies\r\n            </div>\r\n\r\n\r\n            <div>\r\n              <GridList cellHeight={250} cols={6} style={{ flexWrap: 'nowrap', transform: 'translateZ(0)' }}>\r\n                {upComingMovie.map((data) => (\r\n                  <GridListTile key={data.id}>\r\n                    <img src={data.poster_url} alt={data.title} />\r\n                    <GridListTileBar title={data.title}/>\r\n                  </GridListTile>\r\n                ))}\r\n              </GridList>\r\n            </div>\r\n\r\n\r\n            <div className=\"mainbody\">\r\n              <div className=\"movieTab\">\r\n                <GridList cellHeight={350} cols={4} onTileClick={handleRoute()}>\r\n                  {movieDetails.map((data) => (\r\n                    <GridListTile key={data.id} style={{cursor: 'pointer'}}>\r\n                      <img src={data.poster_url} alt={data.title} />\r\n                      <GridListTileBar title={data.title}/>\r\n                  </GridListTile>\r\n                ))}\r\n              </GridList>\r\n              </div>\r\n\r\n\r\n              <div className=\"filterTab\">\r\n                <Box className={classes.root}>\r\n                  <Card>\r\n                    <CardContent>\r\n                      <Typography className={classes.titleColor} variant='string'>FIND MOVIES BY:</Typography>\r\n                      <FormControl className={classes.compAttribs}>\r\n                        <TextField id=\"standard-basic\" label=\"Movie Name\" variant=\"standard\" />\r\n                      </FormControl>\r\n\r\n                      <FormControl className={classes.compAttribs}>\r\n                        <TextField \r\n                          id=\"mutiple-select-label-genre\"\r\n                          select\r\n                          label=\"Genre\" \r\n                          variant=\"standard\"\r\n                          value={selected}\r\n                          onChange={handleChange}\r\n                          renderValue={(selected) => selected.join(\", \")}\r\n                          MenuProps={MenuProps}\r\n                        >\r\n                          {genreOptions.map((genreOptions) => (\r\n                            <MenuItem key={genreOptions} value={genreOptions}>\r\n                              <ListItemIcon>\r\n                                <Checkbox checked={selected.indexOf(genreOptions) > -1} />\r\n                              </ListItemIcon>\r\n                              <ListItemText primary={genreOptions} />\r\n                            </MenuItem>\r\n                          ))}\r\n                        </TextField>\r\n                      </FormControl>\r\n\r\n                      <FormControl className={classes.compAttribs}>\r\n                        <TextField\r\n                          id=\"multiple-select-label-artists\"\r\n                          select\r\n                          label=\"Artists\"\r\n                          variant=\"standard\"\r\n                          value={selected}\r\n                          onChange={handleChange}\r\n                          renderValue={(selected) => selected.join(\",\")}\r\n                          MenuProps={MenuProps}\r\n                        >\r\n                          {artistName.map((artistName) =>(\r\n                            <MenuItem key={artistName} value={artistName}>\r\n                              <ListItemIcon>\r\n                                <Checkbox checked={selected.indexOf(artistName) > -1} />\r\n                              </ListItemIcon>\r\n                              <ListItemText primary={artistName} />\r\n                            </MenuItem>\r\n                          ))}\r\n                        </TextField>\r\n                      </FormControl>\r\n\r\n                      <FormControl className={classes.compAttribs}>\r\n                        <TextField\r\n                          name=\"someDate\"\r\n                          label=\"Release Date Start\"\r\n                          width=\"95%\"\r\n                          InputLabelProps={{ shrink: true, required: true }}\r\n                          type=\"date\"\r\n                        />\r\n                      </FormControl>\r\n\r\n                      <FormControl className={classes.compAttribs}>\r\n                        <TextField\r\n                          name=\"someDate\"\r\n                          label=\"Release Date End\"\r\n                          InputLabelProps={{ shrink: true, required: true }}\r\n                          type=\"date\"\r\n                        />\r\n                      </FormControl>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                      <Button className={classes.compAttribs} variant=\"contained\" color='primary'>Apply</Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </Box>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n  return mainBody;\r\n}\r\n\r\nexport default Home;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,KAFJ,EAGIC,IAHJ,EAIIC,OAJJ,EAKIC,MALJ,QAMO,kBANP;AAQA,SACEC,QADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,GAJF,EAKEC,IALF,EAMEC,WANF,EAOEC,UAPF,EAQEC,WARF,EASEC,MATF,EAUEC,WAVF,EAWEC,SAXF,EAYEC,QAZF,EAaEC,YAbF,EAcEC,YAdF,EAeEC,QAfF,QAgBO,mBAhBP;AAkBA,SACEC,KADF,EAEEC,YAFF,EAGEC,UAHF,QAIO,0BAJP;;AAMA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,IAC3BH,YAAY,CAAC;EACXI,IAAI,EAAE;IACJC,OAAO,EAAE,MADL;IAEJC,QAAQ,EAAE,MAFN;IAGJC,MAAM,EAAE,KAHJ;IAIJC,KAAK,EAAE;EAJH,CADK;EAOXC,UAAU,EAAE;IACVC,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,OAAd,CAAsBC;EADnB,CAPD;EAUXC,WAAW,EAAE;IACXN,KAAK,EAAE,KADI;IAEXO,OAAO,EAAEZ,KAAK,CAACa,OAAN,CAAcC;EAFZ;AAVF,CAAD,CADc,CAA5B;AAkBA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;EAChBC,UAAU,EAAE;IACVC,KAAK,EAAE;MACLC,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;MAELX,KAAK,EAAE;IAFF;EADG,CADI;EAOhBgB,kBAAkB,EAAE,IAPJ;EAQhBC,YAAY,EAAE;IACZC,QAAQ,EAAE,QADE;IAEZC,UAAU,EAAE;EAFA,CARE;EAYhBC,eAAe,EAAE;IACfF,QAAQ,EAAE,KADK;IAEfC,UAAU,EAAE;EAFG,CAZD;EAgBhBE,OAAO,EAAE;AAhBO,CAAlB;;AAmBA,SAASC,IAAT,CAAcC,KAAd,EAAoB;EAAA;;EAElB,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC1D,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAAC2D,YAAD,EAAeC,eAAf,IAAkC5D,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAAC6D,QAAD,EAAWC,WAAX,IAA0B9D,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAAC+D,YAAD,EAAeC,eAAf,IAAkChE,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACiE,UAAD,EAAaC,aAAb,IAA8BlE,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAMmE,OAAO,GAAGxC,SAAS,EAAzB;EAEA5B,SAAS,CAAC,MAAM;IACd,IAAIqE,SAAS,GAAG,IAAhB;IAEAC,KAAK,CAACb,KAAK,CAACc,OAAN,GAAgB,kBAAjB,EAAqC;MACxCC,MAAM,EAAE,KADgC;MAExCC,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,iBAAiB;MAFV;IAF+B,CAArC,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQGF,IARH,CAQSC,QAAD,IAAc;MAClB;MACA,IAAIE,WAAW,GAAG,EAAlB;MACA,IAAIC,aAAa,GAAG,EAApB;MACA,IAAIC,KAAK,GAAG,CAAZ;;MACA,KAAI,IAAIC,IAAR,IAAgBL,QAAQ,CAACM,MAAzB,EAAiC;QAC/BJ,WAAW,CAACK,IAAZ,CAAiB;UACfC,EAAE,EAAEJ,KADW;UAEfK,KAAK,EAAEJ,IAAI,CAACI,KAFG;UAGfC,UAAU,EAAEL,IAAI,CAACK;QAHF,CAAjB;QAKAP,aAAa,CAACI,IAAd,CAAmB;UACjBC,EAAE,EAAEJ,KADa;UAEjBK,KAAK,EAAEJ,IAAI,CAACI,KAFK;UAGjBC,UAAU,EAAEL,IAAI,CAACK;QAHA,CAAnB;QAKAN,KAAK,GAAGA,KAAK,GAAG,CAAhB;MACD;;MAEDO,OAAO,CAACC,GAAR,CAAYV,WAAZ;MACAlB,gBAAgB,CAACkB,WAAD,CAAhB;MACAhB,eAAe,CAACiB,aAAD,CAAf;IACD,CA9BH;IA+BER,KAAK,CAACb,KAAK,CAACc,OAAN,GAAgB,QAAjB,EAA2B;MAC9BC,MAAM,EAAE,KADsB;MAE9BC,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,iBAAiB;MAFV;IAFqB,CAA3B,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQGF,IARH,CAQSC,QAAD,IAAc;MAClB,IAAIX,YAAY,GAAG,EAAnB;;MACA,KAAI,IAAIgB,IAAR,IAAgBL,QAAQ,CAACa,MAAzB,EAAgC;QAC9BxB,YAAY,CAACkB,IAAb,CAAkBF,IAAI,CAACS,KAAvB;MACD;;MACDH,OAAO,CAACC,GAAR,CAAYvB,YAAZ;MACAC,eAAe,CAACD,YAAD,CAAf;IACD,CAfH;IAgBAM,KAAK,CAACb,KAAK,CAACc,OAAN,GAAgB,SAAjB,EAA4B;MAC/BC,MAAM,EAAE,KADuB;MAE/BC,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,iBAAiB;MAFV;IAFsB,CAA5B,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQGF,IARH,CAQSC,QAAD,IAAc;MAClB,IAAIe,WAAW,GAAG,EAAlB;;MACA,KAAI,IAAIV,IAAR,IAAgBL,QAAQ,CAACgB,OAAzB,EAAiC;QAC/B,IAAGX,IAAI,CAACY,SAAL,KAAmB,OAAtB,EAA8B;UAC5BF,WAAW,CAACR,IAAZ,CAAiBF,IAAI,CAACa,UAAL,GAAkB,GAAlB,GAAwBb,IAAI,CAACc,SAA9C;QACD;MACF;;MACDR,OAAO,CAACC,GAAR,CAAYG,WAAZ;MACAvB,aAAa,CAACuB,WAAD,CAAb;IACD,CAjBH;EAkBH,CApEQ,EAoEN,EApEM,CAAT;;EAsEA,MAAMK,YAAY,GAAIC,KAAD,IAAW;IAC9B,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;;IACA,IAAIA,KAAK,CAACA,KAAK,CAACE,MAAN,GAAe,CAAhB,CAAL,KAA4B,KAAhC,EAAuC;MACrCpC,WAAW,CAACD,QAAQ,CAACqC,MAAT,KAAoBnC,YAAY,CAACmC,MAAjC,GAA0C,EAA1C,GAA+CnC,YAAhD,CAAX;MACA;IACD;;IACDD,WAAW,CAACkC,KAAD,CAAX;EACD,CAPD;;EASA,MAAMG,WAAW,GAAG,MAAM;IACxBd,OAAO,CAACC,GAAR,CAAY,OAAZ;EACD,CAFD;;EAIA,MAAMc,QAAQ,gBACR;IAAA,wBACI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAGI;MAAK,SAAS,EAAC,gBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,eAQI;MAAA,uBACE,QAAC,QAAD;QAAU,UAAU,EAAE,GAAtB;QAA2B,IAAI,EAAE,CAAjC;QAAoC,KAAK,EAAE;UAAErE,QAAQ,EAAE,QAAZ;UAAsBsE,SAAS,EAAE;QAAjC,CAA3C;QAAA,UACG5C,aAAa,CAAC6C,GAAd,CAAmBvB,IAAD,iBACjB,QAAC,YAAD;UAAA,wBACE;YAAK,GAAG,EAAEA,IAAI,CAACK,UAAf;YAA2B,GAAG,EAAEL,IAAI,CAACI;UAArC;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,eAAD;YAAiB,KAAK,EAAEJ,IAAI,CAACI;UAA7B;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA,GAAmBJ,IAAI,CAACG,EAAxB;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QARJ,eAoBI;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,QAAC,QAAD;UAAU,UAAU,EAAE,GAAtB;UAA2B,IAAI,EAAE,CAAjC;UAAoC,WAAW,EAAEiB,WAAW,EAA5D;UAAA,UACGxC,YAAY,CAAC2C,GAAb,CAAkBvB,IAAD,iBAChB,QAAC,YAAD;YAA4B,KAAK,EAAE;cAACwB,MAAM,EAAE;YAAT,CAAnC;YAAA,wBACE;cAAK,GAAG,EAAExB,IAAI,CAACK,UAAf;cAA2B,GAAG,EAAEL,IAAI,CAACI;YAArC;cAAA;cAAA;cAAA;YAAA,QADF,eAEE,QAAC,eAAD;cAAiB,KAAK,EAAEJ,IAAI,CAACI;YAA7B;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA,GAAmBJ,IAAI,CAACG,EAAxB;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAaE;QAAK,SAAS,EAAC,WAAf;QAAA,uBACE,QAAC,GAAD;UAAK,SAAS,EAAEf,OAAO,CAACtC,IAAxB;UAAA,uBACE,QAAC,IAAD;YAAA,wBACE,QAAC,WAAD;cAAA,wBACE,QAAC,UAAD;gBAAY,SAAS,EAAEsC,OAAO,CAACjC,UAA/B;gBAA2C,OAAO,EAAC,QAAnD;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE,QAAC,WAAD;gBAAa,SAAS,EAAEiC,OAAO,CAAC5B,WAAhC;gBAAA,uBACE,QAAC,SAAD;kBAAW,EAAE,EAAC,gBAAd;kBAA+B,KAAK,EAAC,YAArC;kBAAkD,OAAO,EAAC;gBAA1D;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QAFF,eAME,QAAC,WAAD;gBAAa,SAAS,EAAE4B,OAAO,CAAC5B,WAAhC;gBAAA,uBACE,QAAC,SAAD;kBACE,EAAE,EAAC,4BADL;kBAEE,MAAM,MAFR;kBAGE,KAAK,EAAC,OAHR;kBAIE,OAAO,EAAC,UAJV;kBAKE,KAAK,EAAEsB,QALT;kBAME,QAAQ,EAAEiC,YANZ;kBAOE,WAAW,EAAGjC,QAAD,IAAcA,QAAQ,CAAC2C,IAAT,CAAc,IAAd,CAP7B;kBAQE,SAAS,EAAE3D,SARb;kBAAA,UAUGkB,YAAY,CAACuC,GAAb,CAAkBvC,YAAD,iBAChB,QAAC,QAAD;oBAA6B,KAAK,EAAEA,YAApC;oBAAA,wBACE,QAAC,YAAD;sBAAA,uBACE,QAAC,QAAD;wBAAU,OAAO,EAAEF,QAAQ,CAAC4C,OAAT,CAAiB1C,YAAjB,IAAiC,CAAC;sBAArD;wBAAA;wBAAA;wBAAA;sBAAA;oBADF;sBAAA;sBAAA;sBAAA;oBAAA,QADF,eAIE,QAAC,YAAD;sBAAc,OAAO,EAAEA;oBAAvB;sBAAA;sBAAA;sBAAA;oBAAA,QAJF;kBAAA,GAAeA,YAAf;oBAAA;oBAAA;oBAAA;kBAAA,QADD;gBAVH;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QANF,eA4BE,QAAC,WAAD;gBAAa,SAAS,EAAEI,OAAO,CAAC5B,WAAhC;gBAAA,uBACE,QAAC,SAAD;kBACE,EAAE,EAAC,+BADL;kBAEE,MAAM,MAFR;kBAGE,KAAK,EAAC,SAHR;kBAIE,OAAO,EAAC,UAJV;kBAKE,KAAK,EAAEsB,QALT;kBAME,QAAQ,EAAEiC,YANZ;kBAOE,WAAW,EAAGjC,QAAD,IAAcA,QAAQ,CAAC2C,IAAT,CAAc,GAAd,CAP7B;kBAQE,SAAS,EAAE3D,SARb;kBAAA,UAUGoB,UAAU,CAACqC,GAAX,CAAgBrC,UAAD,iBACd,QAAC,QAAD;oBAA2B,KAAK,EAAEA,UAAlC;oBAAA,wBACE,QAAC,YAAD;sBAAA,uBACE,QAAC,QAAD;wBAAU,OAAO,EAAEJ,QAAQ,CAAC4C,OAAT,CAAiBxC,UAAjB,IAA+B,CAAC;sBAAnD;wBAAA;wBAAA;wBAAA;sBAAA;oBADF;sBAAA;sBAAA;sBAAA;oBAAA,QADF,eAIE,QAAC,YAAD;sBAAc,OAAO,EAAEA;oBAAvB;sBAAA;sBAAA;sBAAA;oBAAA,QAJF;kBAAA,GAAeA,UAAf;oBAAA;oBAAA;oBAAA;kBAAA,QADD;gBAVH;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QA5BF,eAkDE,QAAC,WAAD;gBAAa,SAAS,EAAEE,OAAO,CAAC5B,WAAhC;gBAAA,uBACE,QAAC,SAAD;kBACE,IAAI,EAAC,UADP;kBAEE,KAAK,EAAC,oBAFR;kBAGE,KAAK,EAAC,KAHR;kBAIE,eAAe,EAAE;oBAAEmE,MAAM,EAAE,IAAV;oBAAgBC,QAAQ,EAAE;kBAA1B,CAJnB;kBAKE,IAAI,EAAC;gBALP;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QAlDF,eA4DE,QAAC,WAAD;gBAAa,SAAS,EAAExC,OAAO,CAAC5B,WAAhC;gBAAA,uBACE,QAAC,SAAD;kBACE,IAAI,EAAC,UADP;kBAEE,KAAK,EAAC,kBAFR;kBAGE,eAAe,EAAE;oBAAEmE,MAAM,EAAE,IAAV;oBAAgBC,QAAQ,EAAE;kBAA1B,CAHnB;kBAIE,IAAI,EAAC;gBAJP;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QA5DF;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAsEE,QAAC,WAAD;cAAA,uBACE,QAAC,MAAD;gBAAQ,SAAS,EAAExC,OAAO,CAAC5B,WAA3B;gBAAwC,OAAO,EAAC,WAAhD;gBAA4D,KAAK,EAAC,SAAlE;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QAtEF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA,QApBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADN;;EAoHA,OAAO6D,QAAP;AACD;;GAjNQ7C,I;UAOS5B,S;;;KAPT4B,I;AAmNT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}